<!--
//*********************************************************
//
// Copyright (c) Microsoft. All rights reserved.
// This code is licensed under the MIT License (MIT).
// THIS CODE IS PROVIDED *AS IS* WITHOUT WARRANTY OF
// ANY KIND, EITHER EXPRESS OR IMPLIED, INCLUDING ANY
// IMPLIED WARRANTIES OF FITNESS FOR A PARTICULAR
// PURPOSE, MERCHANTABILITY, OR NON-INFRINGEMENT.
//
//*********************************************************
-->
<Page
    x:Class="SDKTemplate.Scenario2_Client"
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
    xmlns:local="using:SDKTemplate"
    mc:Ignorable="d">
    <Page.Resources>
        <DataTemplate x:Key="AttributeTemplate" x:DataType="local:BluetoothLEAttributeDisplay">
            <Grid Margin="5">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="Auto"/>
                    <ColumnDefinition Width="*" MinWidth="100"/>
                </Grid.ColumnDefinitions>
                <Border Grid.Column="1" Margin="5">
                    <StackPanel>
                        <StackPanel Orientation="Horizontal">
                            <TextBlock Text="{x:Bind Name}" Style="{StaticResource ListItemTextStyle}" FontWeight="Bold" TextWrapping="WrapWholeWords"/>
                        </StackPanel>
                        <StackPanel Orientation="Horizontal">
                            <TextBlock Text="{x:Bind AttributeDisplayType}" Margin="10,0,0,0"/>
                        </StackPanel>
                    </StackPanel>
                </Border>
            </Grid>
        </DataTemplate>
    </Page.Resources>
    <ScrollViewer Background="{ThemeResource ApplicationPageBackgroundThemeBrush}" Padding="12,10,12,12">
        <RelativePanel>
            <StackPanel x:Name="ControlsPanel">
                <TextBlock Text="LEGO Boost Hub Controller" Style="{StaticResource SampleHeaderTextStyle}"/>
                <RelativePanel>
                    <Button x:Name="ScanButton" Content="Start scanning" Click="{x:Bind ScanButton_Click}" Margin="0,10,10,0"/>
                    <Button x:Name="ConnectButton" Content="Connect" Click="{x:Bind ConnectButton_Click}" Margin="0,10,0,0" RelativePanel.RightOf="ScanButton"/>
                    <Button x:Name="DisconnectButton" Content="Disconnect" Click="{x:Bind DisconnectButton_Click}" Margin="10,10,0,0" RelativePanel.RightOf="ConnectButton"/>
                </RelativePanel>
                <StackPanel x:Name="CharacteristicWritePanel" Margin="0,10,0,0" Visibility="Visible">
                    <TextBox x:Name="CharacteristicWriteValue" PlaceholderText="Enter text/number to send" Width="400" HorizontalAlignment="Left"/>
                    <Button x:Name="WriteHexButton" Content="Write Value as Hex" Click="{x:Bind WriteHexButton_Click}" Margin="0,10,0,0"/>
                    <ComboBox x:Name="LEDColorsCombo" Header="Change LED Color:" Height="75" Width="296" 
                          ItemsSource="{x:Bind colors}" SelectionChanged="{x:Bind LEDColorsCombo_SelectionChanged}" Margin="0, 10, 10, 10"/>
                    <RelativePanel Margin="0, 30, 10, 10">
                        <ComboBox x:Name="MotorsCombo" Header="Pick Motor:" Height="75" Width="296" 
                              ItemsSource="{x:Bind motors}" Margin="0, 0, 10, 10"/>
                        <Slider x:Name="MotorPowerSlider" Header="Select Motor Power" Width="300" Maximum="100" TickFrequency="10" SnapsTo="Ticks"
                            RelativePanel.Below="MotorsCombo" Margin="0, 0, 10, 10"/>
                        <TextBox x:Name="RunTimeText" PlaceholderText="Time to Run" Height="47" 
                             RelativePanel.Below="MotorPowerSlider" RelativePanel.AlignVerticalCenterWithPanel="True" Margin="0, 0, 10, 10"/>
                        <ToggleSwitch x:Name="DirectionToggle" Header="Direction:" RelativePanel.RightOf="RunTimeText" RelativePanel.Below="MotorPowerSlider" 
                                  OnContent="Clockwise" OffContent="Counter-clockwise"/>
                        <Button x:Name="RunMotorButton" Content="Run Motor" Click="{x:Bind RunMotorButton_Click}" Margin="0,10,0,0"
                            RelativePanel.Below="RunTimeText"/>
                    </RelativePanel>
                </StackPanel>
            </StackPanel>
            <StackPanel x:Name="NotificationControlsPanel" RelativePanel.RightOf="ControlsPanel" Margin="100, 0, 0, 0">
                <Button x:Name="EnableButtonNotificationsButton" Content="Enable Button Notifications" Click="{x:Bind EnableButtonNotificationsButton_Click}" Margin="0,30,0,0"/>
                <Button x:Name="ToggleColorDistanceNotificationsButton" Content="Enable Color/Distance Notifications" 
                        Click="{x:Bind ToggleColorDistanceNotificationsButton_Click}" Margin="0,10,0,0"/>
                <RelativePanel>
                    <Button x:Name="ToggleExternalMotorNotificationsButton" Content="Enable External Motor Notifications" 
                            Click="{x:Bind ToggleExternalMotorNotificationsButton_Click}" Margin="0,10,0,0"/>
                    <ToggleSwitch x:Name="ExternalMotorNotificationTypeToggle" RelativePanel.RightOf="ToggleExternalMotorNotificationsButton"
                                  OnContent="Angle" OffContent="Speed" Margin="10,5,0,0"/>
                </RelativePanel>
                <Button x:Name="ToggleTiltSensorNotificationsButton" Content="Enable Tilt Sensor Notifications" 
                        Click="{x:Bind ToggleTiltSensorNotificationsButton_Click}" Margin="0,10,0,0"/>
                <Button x:Name="GetHubName" Content="Trigger Move Hub Name Notification" Click="{x:Bind GetHubNameButton_Click}" Margin="0,10,0,0"/>
                <Button x:Name="GetHubFirmware" Content="Trigger Move Hub Firmware Notification" Click="{x:Bind GetHubFirmwareButton_Click}" Margin="0,10,0,0"/>
                <Button x:Name="SyncLEDMotorButton" Content="Sync LED with Motor" Click="{x:Bind Path=SyncLEDMotorButton_Click}"
                        Margin="0,30,0,0" HorizontalAlignment="Left" VerticalAlignment="Top"/>
            </StackPanel>
            <StackPanel x:Name="NotificationsPanel" RelativePanel.Below="ControlsPanel">
                <TextBlock x:Name="CharacteristicLatestValue" Margin="0,30,0,0" Height="300px" Width="600px"/>
            </StackPanel>
        </RelativePanel>
    </ScrollViewer>
</Page>
